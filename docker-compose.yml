version: "3.9"

networks:
  appnet:

volumes:
  pgdata:

services:
  redis:
    image: redis:latest
    networks: [appnet]
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 2s
      retries: 20

  db:
    image: postgres:latest
    networks: [appnet]
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 3s
      retries: 30

  vote:
    image: "${DOCKERHUB_USER}/vote:latest"
    networks: [appnet]
    environment:
      REDIS_HOST: redis
      PORT: "80"
    ports:
      - "${VOTE_HOST_PORT}:80"
    depends_on:
      redis:
        condition: service_healthy

  result:
    image: "${DOCKERHUB_USER}/result:latest"
    networks: [appnet]
    environment:
      PG_HOST: db
      PORT: "8081"
    ports:
      - "${RESULT_HOST_PORT}:8081"
    depends_on:
      db:
        condition: service_healthy

  worker:
    image: "${DOCKERHUB_USER}/worker:latest"
    networks: [appnet]
    environment:
      REDIS_HOST: redis
      DB_HOST: db
    depends_on:
      redis:
        condition: service_healthy
      db:
        condition: service_healthy
